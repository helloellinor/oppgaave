// Minimal HTMX implementation for contact system
(function() {
    'use strict';
    
    // Basic HTMX functionality
    function processElement(element) {
        const hxGet = element.getAttribute('hx-get');
        const hxPost = element.getAttribute('hx-post');
        const hxTarget = element.getAttribute('hx-target');
        const hxTrigger = element.getAttribute('hx-trigger') || 'click';
        
        if (!hxGet && !hxPost) return;
        
        function handleRequest(event) {
            if (hxTrigger !== 'load' && event) {
                event.preventDefault();
            }
            
            const url = hxGet || hxPost;
            const method = hxGet ? 'GET' : 'POST';
            const target = hxTarget ? document.querySelector(hxTarget) : element;
            
            if (!target) {
                console.error('HTMX target not found:', hxTarget);
                return;
            }
            
            // Handle form data for POST requests
            let body = null;
            if (method === 'POST') {
                if (element.tagName === 'FORM') {
                    body = new FormData(element);
                } else {
                    // If not a form element, find the nearest form
                    const form = element.closest('form');
                    if (form) {
                        body = new FormData(form);
                    }
                }
            }
            
            fetch(url, {
                method: method,
                body: body
            })
            .then(response => response.text())
            .then(html => {
                if (target) {
                    target.innerHTML = html;
                    // Process any new HTMX elements in the loaded content
                    initHTMX(target);
                }
            })
            .catch(error => {
                console.error('HTMX request failed:', error);
                if (target) {
                    target.innerHTML = '<div class="error">Request failed. Please try again.</div>';
                }
            });
        }
        
        if (hxTrigger === 'load') {
            handleRequest();
        } else if (hxTrigger === 'click') {
            element.addEventListener('click', handleRequest);
        }
    }
    
    function initHTMX(root = document) {
        const elements = root.querySelectorAll('[hx-get], [hx-post]');
        elements.forEach(processElement);
    }
    
    // Auto-refresh functionality
    function setupAutoRefresh() {
        const autoRefreshElements = document.querySelectorAll('[hx-trigger*="every"]');
        autoRefreshElements.forEach(element => {
            const trigger = element.getAttribute('hx-trigger');
            const match = trigger.match(/every\s+(\d+)s/);
            if (match) {
                const interval = parseInt(match[1]) * 1000;
                setInterval(() => {
                    processElement(element);
                }, interval);
            }
        });
    }
    
    // Initialize when DOM is ready
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => {
            initHTMX();
            setupAutoRefresh();
        });
    } else {
        initHTMX();
        setupAutoRefresh();
    }
    
    // Expose globally for manual initialization
    window.htmx = {
        process: initHTMX
    };
})();